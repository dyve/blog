<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on dyve.net</title>
    <link>https://dyve.net/tags/django/</link>
    <description>Recent content in Django on dyve.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>dylan@dyve.net (Dylan Verheul)</managingEditor>
    <webMaster>dylan@dyve.net (Dylan Verheul)</webMaster>
    <lastBuildDate>Sat, 18 Feb 2017 07:43:00 +0000</lastBuildDate>
    
	<atom:link href="https://dyve.net/tags/django/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ModelAdmin for a custom Django User model</title>
      <link>https://dyve.net/post/django-custom-user-model-admin/</link>
      <pubDate>Sat, 18 Feb 2017 07:43:00 +0000</pubDate>
      <author>dylan@dyve.net (Dylan Verheul)</author>
      <guid>https://dyve.net/post/django-custom-user-model-admin/</guid>
      <description>Django offers a customized User model. One of the preferred approaches to a custom User is to extend AbstractUser. When doing this there is a nice trick to get all the fields you add to AbstractUser in a separate section in the admin interface.
The method is to scan the parent for known fields, and add the fields that do not exist in the parent to a separate section. A full example is in the code below.</description>
    </item>
    
  </channel>
</rss>